@model CodeTheWay.Models.StudentApplication

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <h1 class="text-md-center">Student Application</h1>
    <hr />
    <h3>Contact Information</h3>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-row">
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.FirstName)
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.LastName)
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email)
        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>

    <div class="form-row">
        <div class="form-group col-md-9">
            @Html.LabelFor(model => model.HighSchool)
            @Html.EditorFor(model => model.HighSchool, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.HighSchool, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.EstGradDate)
            @Html.EditorFor(model => model.EstGradDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
            @Html.ValidationMessageFor(model => model.EstGradDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6">
            <div class="form-check">
                @Html.EditorFor(model => model.WindowsLaptop, new { htmlAttributes = new { @class = "form-check-input" } })
                @Html.LabelFor(model => model.WindowsLaptop, "I have a Windows Laptop",  new { @class = "form-check-label" })
                @Html.ValidationMessageFor(model => model.WindowsLaptop, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6">
            <div class="form-check">
                @Html.EditorFor(model => model.CSAComplete, new { htmlAttributes = new { @class = "form-check-input" } })
                @Html.LabelFor(model => model.CSAComplete, "I have completed AP Computer Science A/IB", new { @class = "form-check-label" })
                @Html.ValidationMessageFor(model => model.CSAComplete, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Accomplishments, "If not, please detail the computer science classes you have taken and your computer programming experiences")
        @Html.EditorFor(model => model.Accomplishments, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Accomplishments, "", new { @class = "text-danger" })
    </div>

    <h3>Master Class</h3>
    <hr />

    <div class="form-row">
        <div class="form-group col-md-5">
            <div class="form-check">
                @Html.EditorFor(model => model.PresentAllClassDates, new { htmlAttributes = new { @class = "form-check-input" } })
                @Html.LabelFor(model => model.PresentAllClassDates, "I will be here for all days of the Master Class: (TBD)", new { @class = "form-check-label" })
                @Html.ValidationMessageFor(model => model.PresentAllClassDates, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-7">
            @Html.LabelFor(model => model.MissedClassDates, "If not, list all missed class days")
            @Html.EditorFor(model => model.MissedClassDates, new { htmlAttributes = new { @class = "form-control" } })
            <small class="form-text text-muted">Format is mm/dd, mm/dd, mm/dd...</small>
            @Html.ValidationMessageFor(model => model.MissedClassDates, "", new { @class = "text-danger" })
        </div>
    </div>

    <h3>Project Season</h3>
    <hr />

    <div class="form-row">
        <div class="form-group col-md-5">
            <div class="form-check">
                @Html.EditorFor(model => model.PresentAllSeasonDates, new { htmlAttributes = new { @class = "form-check-input" } })
                @Html.LabelFor(model => model.PresentAllSeasonDates, "I will be here for all days of the Project Season: (TBD) ", new { @class = "form-check-label" })
                @Html.ValidationMessageFor(model => model.PresentAllSeasonDates, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-7">
            @Html.LabelFor(model => model.MissedSeasonDates, "If not, list all missed season days")
            @Html.EditorFor(model => model.MissedSeasonDates, new { htmlAttributes = new { @class = "form-control" } })
            <small class="form-text text-muted">Format is mm/dd, mm/dd, mm/dd...</small>
            @Html.ValidationMessageFor(model => model.MissedSeasonDates, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <input type="submit" value="Submit" class="btn btn-primary" />
    </div>
}


